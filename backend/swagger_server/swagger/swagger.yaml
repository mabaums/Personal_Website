openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.2.0
servers:
- url: https://virtserver.swaggerhub.com/mabaums/Personal_Website/1.2.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /squad:
    get:
      tags:
      - client
      summary: get list of players from a team
      operationId: get_squad
      parameters:
      - name: team_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: squad
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/player'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /fixture:
    get:
      tags:
      - client
      summary: Get basic info about a fixture
      operationId: get_fixture
      parameters:
      - name: fixture_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Fixture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fixture'
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /player:
    get:
      tags:
      - client
      summary: get basic info about a player
      operationId: get_player
      parameters:
      - name: player_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /standings:
    get:
      tags:
      - client
      summary: Get standings from the selected league
      operationId: get_standing
      parameters:
      - name: leagueID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: season
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Standings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team_standing'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /predictRound:
    get:
      tags:
      - client
      summary: Predict a certain round based on the previous weeks.
      operationId: predict_round
      parameters:
      - name: roundNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: algoID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Preidcted round
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/predicted_game'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /predictGame:
    get:
      tags:
      - client
      summary: Predict the outcome of two teams playing
      operationId: predict_game
      parameters:
      - name: homeID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: awayID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: algoID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Game Predicted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/predicted_game'
      x-openapi-router-controller: swagger_server.controllers.client_controller
  /team:
    get:
      tags:
      - client
      summary: get team of specified id
      operationId: get_team
      parameters:
      - name: teamID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Team returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
      x-openapi-router-controller: swagger_server.controllers.client_controller
components:
  schemas:
    team:
      type: object
      properties:
        team_id:
          type: integer
        team_name:
          type: string
        team_logo:
          type: string
        form:
          type: string
        description:
          type: string
      example:
        form: form
        description: description
        team_id: 0
        team_name: team_name
        team_logo: team_logo
    team_standing:
      type: object
      properties:
        team_id:
          type: integer
          example: 44
        rank:
          type: integer
          example: 1
        team_name:
          type: string
          example: Chelsea FC
        team_logo:
          type: string
        points:
          type: integer
          example: 100
        goalsDiff:
          type: string
          example: "40"
        form:
          type: string
        description:
          type: string
      example:
        form: form
        rank: 1
        description: description
        team_id: 44
        goalsDiff: "40"
        team_name: Chelsea FC
        team_logo: team_logo
        points: 100
    predicted_game:
      type: object
      properties:
        goals_home:
          type: integer
          example: 100
        goals_away:
          type: integer
          example: 1
        name_home:
          type: string
          example: Chelsea FC
        name_away:
          type: string
          example: Manchester City
      example:
        name_away: Manchester City
        name_home: Chelsea FC
        goals_home: 100
        goals_away: 1
    player:
      type: object
      properties:
        name:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        team_id:
          type: integer
        photo:
          type: string
        age:
          type: integer
        player_id:
          type: integer
      example:
        firstname: firstname
        player_id: 1
        name: name
        photo: photo
        team_id: 0
        age: 6
        lastname: lastname
    fixture:
      type: object
      properties:
        fixture_id:
          type: integer
        referee:
          type: string
        home_team_id:
          type: integer
        away_team_id:
          type: integer
        home_goals:
          type: integer
        away_goals:
          type: integer
        league_id:
          type: integer
        season_year:
          type: integer
        round:
          type: string
        date:
          type: integer
      example:
        fixture_id: 0
        date: 9
        home_team_id: 6
        home_goals: 5
        round: round
        referee: referee
        away_team_id: 1
        away_goals: 5
        league_id: 2
        season_year: 7
    coach:
      type: object
      properties:
        name:
          type: string

