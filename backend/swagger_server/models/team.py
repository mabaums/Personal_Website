# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Team(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rank: int=None, team_name: str=None, team_logo: str=None, points: int=None, goals_diff: str=None, form: str=None, description: str=None):  # noqa: E501
        """Team - a model defined in Swagger

        :param rank: The rank of this Team.  # noqa: E501
        :type rank: int
        :param team_name: The team_name of this Team.  # noqa: E501
        :type team_name: str
        :param team_logo: The team_logo of this Team.  # noqa: E501
        :type team_logo: str
        :param points: The points of this Team.  # noqa: E501
        :type points: int
        :param goals_diff: The goals_diff of this Team.  # noqa: E501
        :type goals_diff: str
        :param form: The form of this Team.  # noqa: E501
        :type form: str
        :param description: The description of this Team.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'rank': int,
            'team_name': str,
            'team_logo': str,
            'points': int,
            'goals_diff': str,
            'form': str,
            'description': str
        }

        self.attribute_map = {
            'rank': 'rank',
            'team_name': 'team_name',
            'team_logo': 'team_logo',
            'points': 'points',
            'goals_diff': 'goalsDiff',
            'form': 'form',
            'description': 'description'
        }
        self._rank = rank
        self._team_name = team_name
        self._team_logo = team_logo
        self._points = points
        self._goals_diff = goals_diff
        self._form = form
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'Team':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The team of this Team.  # noqa: E501
        :rtype: Team
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rank(self) -> int:
        """Gets the rank of this Team.


        :return: The rank of this Team.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank: int):
        """Sets the rank of this Team.


        :param rank: The rank of this Team.
        :type rank: int
        """

        self._rank = rank

    @property
    def team_name(self) -> str:
        """Gets the team_name of this Team.


        :return: The team_name of this Team.
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name: str):
        """Sets the team_name of this Team.


        :param team_name: The team_name of this Team.
        :type team_name: str
        """

        self._team_name = team_name

    @property
    def team_logo(self) -> str:
        """Gets the team_logo of this Team.


        :return: The team_logo of this Team.
        :rtype: str
        """
        return self._team_logo

    @team_logo.setter
    def team_logo(self, team_logo: str):
        """Sets the team_logo of this Team.


        :param team_logo: The team_logo of this Team.
        :type team_logo: str
        """

        self._team_logo = team_logo

    @property
    def points(self) -> int:
        """Gets the points of this Team.


        :return: The points of this Team.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points: int):
        """Sets the points of this Team.


        :param points: The points of this Team.
        :type points: int
        """

        self._points = points

    @property
    def goals_diff(self) -> str:
        """Gets the goals_diff of this Team.


        :return: The goals_diff of this Team.
        :rtype: str
        """
        return self._goals_diff

    @goals_diff.setter
    def goals_diff(self, goals_diff: str):
        """Sets the goals_diff of this Team.


        :param goals_diff: The goals_diff of this Team.
        :type goals_diff: str
        """

        self._goals_diff = goals_diff

    @property
    def form(self) -> str:
        """Gets the form of this Team.


        :return: The form of this Team.
        :rtype: str
        """
        return self._form

    @form.setter
    def form(self, form: str):
        """Sets the form of this Team.


        :param form: The form of this Team.
        :type form: str
        """

        self._form = form

    @property
    def description(self) -> str:
        """Gets the description of this Team.


        :return: The description of this Team.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Team.


        :param description: The description of this Team.
        :type description: str
        """

        self._description = description
