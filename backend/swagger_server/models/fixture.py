# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Fixture(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, fixture_id: int=None, referee: str=None, home_team_id: int=None, away_team_id: int=None, home_goals: int=None, away_goals: int=None, league_id: int=None, season_year: int=None, round: str=None, _date: int=None):  # noqa: E501
        """Fixture - a model defined in Swagger

        :param fixture_id: The fixture_id of this Fixture.  # noqa: E501
        :type fixture_id: int
        :param referee: The referee of this Fixture.  # noqa: E501
        :type referee: str
        :param home_team_id: The home_team_id of this Fixture.  # noqa: E501
        :type home_team_id: int
        :param away_team_id: The away_team_id of this Fixture.  # noqa: E501
        :type away_team_id: int
        :param home_goals: The home_goals of this Fixture.  # noqa: E501
        :type home_goals: int
        :param away_goals: The away_goals of this Fixture.  # noqa: E501
        :type away_goals: int
        :param league_id: The league_id of this Fixture.  # noqa: E501
        :type league_id: int
        :param season_year: The season_year of this Fixture.  # noqa: E501
        :type season_year: int
        :param round: The round of this Fixture.  # noqa: E501
        :type round: str
        :param _date: The _date of this Fixture.  # noqa: E501
        :type _date: int
        """
        self.swagger_types = {
            'fixture_id': int,
            'referee': str,
            'home_team_id': int,
            'away_team_id': int,
            'home_goals': int,
            'away_goals': int,
            'league_id': int,
            'season_year': int,
            'round': str,
            '_date': int
        }

        self.attribute_map = {
            'fixture_id': 'fixture_id',
            'referee': 'referee',
            'home_team_id': 'home_team_id',
            'away_team_id': 'away_team_id',
            'home_goals': 'home_goals',
            'away_goals': 'away_goals',
            'league_id': 'league_id',
            'season_year': 'season_year',
            'round': 'round',
            '_date': 'date'
        }
        self._fixture_id = fixture_id
        self._referee = referee
        self._home_team_id = home_team_id
        self._away_team_id = away_team_id
        self._home_goals = home_goals
        self._away_goals = away_goals
        self._league_id = league_id
        self._season_year = season_year
        self._round = round
        self.__date = _date

    @classmethod
    def from_dict(cls, dikt) -> 'Fixture':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The fixture of this Fixture.  # noqa: E501
        :rtype: Fixture
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixture_id(self) -> int:
        """Gets the fixture_id of this Fixture.


        :return: The fixture_id of this Fixture.
        :rtype: int
        """
        return self._fixture_id

    @fixture_id.setter
    def fixture_id(self, fixture_id: int):
        """Sets the fixture_id of this Fixture.


        :param fixture_id: The fixture_id of this Fixture.
        :type fixture_id: int
        """

        self._fixture_id = fixture_id

    @property
    def referee(self) -> str:
        """Gets the referee of this Fixture.


        :return: The referee of this Fixture.
        :rtype: str
        """
        return self._referee

    @referee.setter
    def referee(self, referee: str):
        """Sets the referee of this Fixture.


        :param referee: The referee of this Fixture.
        :type referee: str
        """

        self._referee = referee

    @property
    def home_team_id(self) -> int:
        """Gets the home_team_id of this Fixture.


        :return: The home_team_id of this Fixture.
        :rtype: int
        """
        return self._home_team_id

    @home_team_id.setter
    def home_team_id(self, home_team_id: int):
        """Sets the home_team_id of this Fixture.


        :param home_team_id: The home_team_id of this Fixture.
        :type home_team_id: int
        """

        self._home_team_id = home_team_id

    @property
    def away_team_id(self) -> int:
        """Gets the away_team_id of this Fixture.


        :return: The away_team_id of this Fixture.
        :rtype: int
        """
        return self._away_team_id

    @away_team_id.setter
    def away_team_id(self, away_team_id: int):
        """Sets the away_team_id of this Fixture.


        :param away_team_id: The away_team_id of this Fixture.
        :type away_team_id: int
        """

        self._away_team_id = away_team_id

    @property
    def home_goals(self) -> int:
        """Gets the home_goals of this Fixture.


        :return: The home_goals of this Fixture.
        :rtype: int
        """
        return self._home_goals

    @home_goals.setter
    def home_goals(self, home_goals: int):
        """Sets the home_goals of this Fixture.


        :param home_goals: The home_goals of this Fixture.
        :type home_goals: int
        """

        self._home_goals = home_goals

    @property
    def away_goals(self) -> int:
        """Gets the away_goals of this Fixture.


        :return: The away_goals of this Fixture.
        :rtype: int
        """
        return self._away_goals

    @away_goals.setter
    def away_goals(self, away_goals: int):
        """Sets the away_goals of this Fixture.


        :param away_goals: The away_goals of this Fixture.
        :type away_goals: int
        """

        self._away_goals = away_goals

    @property
    def league_id(self) -> int:
        """Gets the league_id of this Fixture.


        :return: The league_id of this Fixture.
        :rtype: int
        """
        return self._league_id

    @league_id.setter
    def league_id(self, league_id: int):
        """Sets the league_id of this Fixture.


        :param league_id: The league_id of this Fixture.
        :type league_id: int
        """

        self._league_id = league_id

    @property
    def season_year(self) -> int:
        """Gets the season_year of this Fixture.


        :return: The season_year of this Fixture.
        :rtype: int
        """
        return self._season_year

    @season_year.setter
    def season_year(self, season_year: int):
        """Sets the season_year of this Fixture.


        :param season_year: The season_year of this Fixture.
        :type season_year: int
        """

        self._season_year = season_year

    @property
    def round(self) -> str:
        """Gets the round of this Fixture.


        :return: The round of this Fixture.
        :rtype: str
        """
        return self._round

    @round.setter
    def round(self, round: str):
        """Sets the round of this Fixture.


        :param round: The round of this Fixture.
        :type round: str
        """

        self._round = round

    @property
    def _date(self) -> int:
        """Gets the _date of this Fixture.


        :return: The _date of this Fixture.
        :rtype: int
        """
        return self.__date

    @_date.setter
    def _date(self, _date: int):
        """Sets the _date of this Fixture.


        :param _date: The _date of this Fixture.
        :type _date: int
        """

        self.__date = _date
